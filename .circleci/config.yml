version: 2

jobs:
  unit_test:
    docker:
      # specify the version you desire here
      - image: circleci/node:latest-browsers
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      # run tests!
      - run: npm test

  e2e_test:

    docker:
      # Docker image with Cypress preinstalled
      - image: cypress/internal:cy-0.19.4

    working_directory: ~/repo

    steps:

      - checkout

      - run: npm install

      - run: npm start

      - run:
          name: Running E2E tests 
          command: cypress run
    
      - store_artifacts:
          path: cypress/videos

      - store_artifacts:
          path: cypress/screenshots

  deployment:
    docker:
      - image: efficienthealth/node-awscli:latest

    steps:

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm run build

      - deploy:
          name: Deploy to S3 if tests pass and branch is Master
          command: |
           if [ "${CIRCLE_BRANCH}" == "master" ]; then
              aws s3 sync ./build s3://philipmorrisdev --delete --region eu-west-2 --acl public-read
            else
              echo "Not master branch so not deploying"
            fi
            
workflows:
  version: 2
  test:
    jobs:
      - e2e_test